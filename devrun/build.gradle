plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.asciidoctor.convert' version "1.5.3"
}

ext {
    snippetsDir = file('build/generated-snippets') // (2)
}

asciidoctor { // (3)
    inputs.dir snippetsDir
    dependsOn test
}

group = 'kdt.prgrms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7' // 쿼리 파라미터 출력을 위해 사용

    // validation check
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.4.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'
}

test {
    useJUnitPlatform()
    // Snippets 디렉토리를 출력으로 작업하도록 설정
    outputs.dir snippetsDir
}

asciidoctor {
    // Snippets 디렉토리를 Input 디렉토리로 설정
    inputs.dir snippetsDir
    // 문서 생성 전 테스트가 실행되도록 test 에 종속 설정
    dependsOn test
}

bootJar {
    // 빌드 전 문서 생성 확인
    dependsOn asciidoctor
    // 생성된 문서를 static/docs 에 복사
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

